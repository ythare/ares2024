<?xml version="1.0" ?>
<launch>
  <arg name="key_control" default="true" />
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <!-- <arg name="world_name" value="$(find ares_simulation)/world/auto_world/auto_world_dynamic_obstacles.world"/> -->
  <!-- <arg name="world_name" value="$(find ares_simulation)/world/auto_world/auto_world.world"/> -->
  <arg name="world_name" value="$(find ares_simulation)/world/RMUC2024_world/RMUC2024_world.world"/>

  <!-- Start gazebo and load the world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="true"/>
  </include>

<!-- 地图 -->
  <!-- <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find ares_simulation)/urdf/rmus_map_2.urdf -urdf -model ares_simulation"
    output="screen" /> -->

  <!-- 小车模型 -->
  <arg name="model" default="$(find ares_simulation)/urdf/sim_waking_robot.xacro" />
  <param name="robot_description" command="$(find xacro)/xacro  --inorder $(arg model)" />

  <!-- Run a python script to send a service call the gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model robot -param robot_description -x 9.0 -y 6.2 -z 0.55 -R 0 -P 0 -Y 1.57"/> 
  <!-- args="-urdf -model robot -param robot_description -x 7.5 -y 6.0 -z 0.55 -R 0 -P 0 -Y 1.57"/>  -->

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  
          <!-- ******************key_control****************** -->
  <group if="$(arg key_control)">
    <node name="twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" />
  </group>
          <!-- ******************pointcloud converter********************* -->
    <!-- <node pkg="rm_bringup" name="point_cloud_converter" type="point_cloud_converter_node" >
		<remap from="points_in" to="/livox/lidar_"/>
		<remap from="points2_out" to="/livox/lidar" />
		
		<remap from="points2_in" to="velodyne_points"/>
		<remap from="points_out" to="velodyne_points" />
	
	</node> -->

  <!-- ******************RViz****************** -->
  <arg name="rviz" default="true"/>
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="$(anon rviz)" respawn="false" output="screen" args="-d $(find ares_simulation)/rviz/ares.rviz" />

</launch>
